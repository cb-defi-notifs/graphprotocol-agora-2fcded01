# Creates and publishes assets for a new release.
# To manually trigger this workflow, create a release in the GitHub UI.

name: "Publish binaries"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  publish-github:
    strategy:
      # Allowing jobs to fail until 'node-pre-gyp-github' supports failing gracefully if file already exists
      # (https://github.com/bchr02/node-pre-gyp-github/issues/42)
      fail-fast: false
      matrix:
        node_version: [16]
        system:
          - os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
            linker: aarch64-darwin-gcc
            cross: false
          - os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-gnu
            linker: gcc-aarch64-linux-gnu
            cross: true
#        system:
#          - os: macos-latest
#            target: x86_64-apple-darwin
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-gnu
#        include:
#          - node_version: 16
#            system:
#              os: macos-latest
#              target: aarch64-apple-darwin
#          - node_version: 16
#            system:
#              os: ubuntu-latest
#              target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.system.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Rust cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
            target
          key: ${{ runner.os }}

      - name: Install Linker
        if: matrix.system.cross
        run: |
          sudo apt update
          sudo apt install build-essential
          sudo apt install libudev-dev
          sudo apt install ${{ matrix.system.linker }}

      - name: Install Rust
        run: |
          rustup install ${{ matrix.system.rust }}
          rustup target add ${{ matrix.system.target }}
          rustup show

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.system.target }}
          override: true

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install dependencies
        env: 
          NPM_CONFIG_FOREGROUND_SCRIPTS: true npm ci
        working-directory: ./node-plugin
        run: |
          yarn autoclean --init
          rm -rf node_modules && yarn install --frozen-lockfile --ignore-scripts
      
      - name: Cross compile rust code
        run: |
          cargo install cargo-flash
      
      - name: Compile binary, test, package, and publish to Github release page
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_BUILD_TARGET: ${{ matrix.system.target }}
        working-directory: ./node-plugin
        run: yarn build-test-pack-publish
